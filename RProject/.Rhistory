is_part_01_column <- [colnames(data) %like% 'part_01']
part_01_column_names <- colnames(data)[, is_part_01_column]
head(part_01_column_names, 5)
is_part_01_column <- colnames(data) %like% 'part_01'
is_part_01_column
is_part_01_column <- colnames(data) %like% 'part_01'
part_01_column_names <- colnames(data)[, is_part_01_column]
head(part_01_column_names, 5)
part_01_column_names <- colnames(data)[is_part_01_column]
is_part_01_column <- colnames(data) %like% 'part_01'
part_01_column_names <- colnames(data)[, is_part_01_column]
head(part_01_column_names, 5)
is_part_01_column <- colnames(data) %like% 'part_01'
part_01_column_names <- colnames(data)[is_part_01_column]
head(part_01_column_names, 5)
filtered_data <- data[is_part_01_column]
gathered_data <- gather(filtered, 'col_name', "value", part_01_column_names)
k <- ggplot(gathered_data, aes(x = gathered_data$value))
y <- k + facet_grid(~ gathered_data$col_name)
y + histogram_chart()
y + geom_histogram(col = 'blue', fill = 'orange')
y <- k + facet_grid(rows = vars(gathered_data$col_name)
)
y + geom_histogram(col = 'blue', fill = 'orange')
y <- k + facet_grid(. ~ gathered_data$col_name)
y + geom_histogram(col = 'blue', fill = 'orange')
head(gathered_data,15)
k <- ggplot(gathered_data, aes(x = gathered_data$col_name))
y <- k + facet_grid(. ~ gathered_data$col_name)
y + geom_histogram(col = 'blue', fill = 'orange')
k <- ggplot(gathered_data)
y <- k + facet_grid(. ~ gathered_data$col_name)
y + geom_histogram(col = 'blue', fill = 'orange')
k <- ggplot(gathered_data, aes(x = gathered_data$col_name))
k + geom_histogram(col = 'blue', fill = 'orange')
k + stat_count(width = 0.5)
table(gathered_data$value)
z <- spread(table(gathered_data), gathered_data$value, Freq)
z <- spread(as.data.frame(table(gathered_data)), gathered_data$value, Freq)
z <- gathered_data %>% group_by(col_name, value) >%> summarise(N = count(result))
gathered_data %>% group_by(col_name, value) >%> summarise(N = count(result))
gathered_data %>% group_by(col_name, value) %>% summarise(N = count(result))
z <- gathered_data %>% group_by(col_name, value) %>% summarise(N = count())
z <- gathered_data %>% group_by(col_name, value) %>% summarise(N = sum())
z
z <- gathered_data %>% group_by(col_name, value) %>% summarise(N = n())
z
tail(z)
z[N>1]
z[z$N>1]
z[,z$N>1]
z[z$N>1,]
k <- ggplot(gathered_data, aes(x = gathered_data$value))
k + facet_grid(.~ gathered_data$col_name)
head(gathered_data, 5)
k + geom_histogram(binwidth = 1) + facet_grid(.~ gathered_data$col_name)
gathered_data$col_name
k + geom_histogram(binwidth = 1) + facet_grid(.~ gathered_data$col_name)
k + geom_histogram() + facet_grid(.~ gathered_data$col_name)
k + geom_histogram(binwidth = 50) + facet_grid(.~ gathered_data$col_name)
k + geom_histogram(binwidth = 50) + facet_grid(. ~ gathered_data$col_name)
k <- ggplot(gathered_data, aes(x = gathered_data$value))
k + facet_grid(. ~ gathered_data$col_name)
i <- k + facet_grid(. ~ gathered_data$col_name)
i + geom_histogram(binwidth = 50)
i <- k + facet_grid(rows=rows =  gathered_data$col_name)
i <- k + facet_grid(rows =  gathered_data$col_name)
i <- k + facet_grid(rows = vars(gathered_data$col_name))
i + geom_histogram(binwidth = 50)
i <- k + facet_grid(cols = vars(gathered_data$col_name))
i + geom_histogram(binwidth = 50)
i <- k + facet_grid(rows = vars(gathered_data$col_name), nrow(5))
i + geom_histogram(binwidth = 50)
i <- k + facet_grid(rows = vars(gathered_data$col_name), ncol(5))
i + geom_histogram(binwidth = 50)
i <- k + facet_grid(cols =  = vars(gathered_data$col_name), ncol(5))
i <- k + facet_grid(cols = vars(gathered_data$col_name), ncol(5))
i + geom_histogram(binwidth = 50)
i <- k + facet_grid(cols = vars(gathered_data$col_name), cols = 5)
?facet_grid
i <- k + facet_grid(cols = vars(unique(gathered_data$col_name))
)
i + geom_histogram(binwidth = 50)
i <- k + facet_grid(cols = vars(gathered_data$col_name), ncol = 2)
i <- k + facet_grid(cols = vars(gathered_data$col_name), ncol = 5)
i <- k + facet_grid(cols = vars(gathered_data$col_name), ncol = 5)
i <- k + facet_grid(cols = vars(gathered_data$col_name), nrow = 5)
?facet_Grid
?facet_grid
i <- k + facet_wrap(cols = vars(gathered_data$col_name), nrow = 5)
i <- k + facet_wrap(cols = vars(gathered_data$col_name), ncols = 5)
i <- k + facet_wrap(cols = vars(gathered_data$col_name), ncol = 5)
i <- k + facet_wrap(vars(gathered_data$col_name), ncol = 5)
i + geom_histogram(binwidth = 50)
i + geom_histogram(binwidth = 1)
i + geom_point()
i + geom_histogram()
i <- k + facet_wrap(vars(gathered_data$col_name), ncol = 2, margin= TRUE)
i + geom_histogram()
i <- k + facet_wrap(vars(gathered_data$col_name), ncol = 2, margins= TRUE)
i + geom_histogram()
i <- k + facet_wrap(vars(gathered_data$col_name), ncol = 2, margins= TRUE)
i <- k + facet_wrap(vars(gathered_data$col_name), ncol = 2, scales = "free")
i + geom_histogram()
i <- k + facet_wrap(vars(gathered_data$col_name), ncol = 2, scales = "free", shrink = FALSE)
i + geom_histogram()
i <- k + facet_wrap(vars(gathered_data$col_name), ncol = 2, shrink = FALSE)
i + geom_histogram()
i <- k + facet_wrap(vars(gathered_data$col_name), ncol = 10)
i + geom_histogram()
i <- k + facet_wrap_paginate(vars(gathered_data$col_name), ncol = 2)
library(ggforce)
install.packages("ggforce")
library(ggforce)
i <- k + facet_wrap_paginate(vars(gathered_data$col_name), ncol = 2)
i + geom_histogram()
i <- k + facet_wrap(vars(gathered_data$col_name))
i + geom_histogram()
is_part_01_column <- colnames(data) %like% 'part_01'
part_01_column_names <- colnames(data)[is_part_01_column]
head(part_01_column_names, 5)
filtered_data <- data[is_part_01_column]
gathered_data <- gather(filtered_data, 'col_name', "value", part_01_column_names)
dim(gathered_data)
gathered_data_with_count <- gathered_data %>% group_by(col_name, value) %>% summarise(N = n())
k <- ggplot(gathered_data, aes(x = gathered_data$value))
i <- k + facet_wrap(vars(gathered_data$col_name), ncol = 3)
i + geom_histogram(binwidth = 20)
length(gathered_data$col_name)
table(gathered_data$col_name)
length(gathered_data$col_name)
length(unique(gathered_data$col_name))
set.seed(23)
filePath = "C:/Users/micha/Downloads/all_summary.csv"
initial <- read.table(filePath, nrows = 100, sep = ";", header = TRUE)
classes <- sapply(initial, class)
data <- read.table(filePath, colClasses = classes, sep = ";", nrows = 100, header = TRUE)
na.omit(data)
nrow(data)
nrow(data[complete.cases(data),])
ncol(data[,complete.cases(data)])
x <- data[1,]
x
na.omit(x)
class(x)
x
nrow(x)
library(dplyr)
library(tibble)
library(tidyr) #transforming data
library(ggplot2)
library(kableExtra) #nicer tables
library(data.table) #%like%
```
filter(x, is.na(x))
naCount <- x %>%
gather("column", "value", 1:ncol(x)) %>%
filter(is.na(value))
na
naCount
ggplot(naCount, aes(factor(column))) +
geom_bar() +
labs(title = "Liczba brakujących wartości w kolumnie", x = "Kolumna", y = "Liczba brakujących wartości") +
theme_bw()
ncol(x)
is.na(x[1,1])
naCount <- x %>%
gather("column", "value", 1:ncol(x)) %>%
filter(is.na(value))
ggplot(naCount, aes(factor(column))) +
geom_bar() +
labs(title = "Liczba brakujących wartości w kolumnie", x = "Kolumna", y = "Liczba brakujących wartości") +
theme_bw()
naCount <- data %>%
gather("column", "value", 1:ncol(data)) %>%
filter(is.na(value))
ggplot(naCount, aes(factor(column))) +
geom_bar() +
labs(title = "Liczba brakujących wartości w kolumnie", x = "Kolumna", y = "Liczba brakujących wartości") +
theme_bw()
is.na(x[1,1])
naCount
naCount <- x %>%
gather("column", "value", 1:ncol(x))
naCount
nrow(naCount)
naCount[1]
naCount[1,]
is.na(naCount[1,])
class(naCount[1,])
class(naCount[1,1])
is.na(naCount[1,1])
is.na(x[1,1])
filter(naCount, is.na(,1))
filter(naCount, is.na(value))
naCount <- x %>%
gather("column", "value", 1:ncol(x))
naCount <- gather(data, "column_name", "val", 1:ncol(data))
filter(data, is.na(val))
filter(data, is.na(data$val))
filter(naCount, is.na(naCount$val))
column_value_DT <- gather(data, "column_name", "val", 1:ncol(data))
nan_data <- filter(column_value_DT, is.na(column_value_DT$val))
class(nan_data)
nan_data[,0]
nan_data[,1]
columns_with_nans <- filter(column_value_DT, is.na(column_value_DT$val))[,1]
columns_with_nans
filePath = "C:/Users/micha/Downloads/all_summary.csv"
initial <- read.table(filePath, nrows = 100, sep = ";", header = TRUE)
classes <- sapply(initial, class)
data <- read.table(filePath, colClasses = classes, sep = ";", nrows = 10000, header = TRUE)
classes
data <- read.table(filePath, colClasses = classes, sep = ";", nrows = 10000, header = TRUE)
data <- read.table(filePath, colClasses = classes, sep = ";", nrows = 100, header = TRUE)
data <- read.table(filePath, colClasses = classes, sep = ";", nrows = 1000, header = TRUE)
data <- read.table(filePath, colClasses = classes, sep = ";", nrows = 150, header = TRUE)
data <- read.table(filePath, colClasses = classes, sep = ";", nrows = 1000, header = TRUE)
data <- read.table(filePath, colClasses = classes, sep = ";", na.strings = 'nan', nrows = 1000, header = TRUE)
data <- read.table(filePath, colClasses = classes, sep = ";", na.strings = 'nan', nrows = 10000, header = TRUE)
nrow(data)
column_value_DT <- gather(data, "column_name", "val", 1:ncol(data))
columns_with_nans <- filter(column_value_DT, is.na(column_value_DT$val))[,1]
table(columns_with_nans)
group_by(columns_with_nans, columns_with_nans)
columns_with_nans <- filter(column_value_DT, is.na(column_value_DT$val))
group_by(columns_with_nans, columns_with_nans$column_name)
head(columns_with_nans)
columns_with_nans <- filter(column_value_DT, is.na(column_value_DT$val))[,1]
columns_with_nans <- filter(column_value_DT, is.na(column_value_DT$val))
data_with_na <- filter(column_value_DT, is.na(column_value_DT$val))[,1]
split.data.frame(data_with_na, data_with_na$)
data_with_na <- filter(column_value_DT, is.na(column_value_DT$val))
split.data.frame(data_with_na, data_with_na$column_name)
group_by_at(data_with_na, vars(data_with_na$column_name))
group_by(data_with_na, vars(data_with_na$column_name))
group_by(data_with_na, data_with_na$column_name)
zz < data_with_na[,1]
zz <- data_with_na[,1]
list.group(zz)
?list.group
group_by_at(data_with_na, vars(data_with_na$column_name))
data_with_na[,1]
table(columns_with_nans)
table(data_with_na)
data_with_na <- filter(column_value_DT, is.na(column_value_DT$val))
table(data_with_na)
column_value_DT <- gather(data, "column_name", "val", 1:ncol(data))
columns_with_nans <- filter(column_value_DT, is.na(column_value_DT$val))[,1]
table(data_with_na)
table(columns_with_nans)
kable(summary(data))
table(columns_with_nans)
data[data$weight_col]
data[,data$weight_col]
data$weight_col
data[,weight_col]
data[,data$weight_col]
data[,which(names(data) == 'weight_col' )]
data[,-which(names(data) == 'weight_col' )]
ncol(data)
data <- data[,-which(names(data) == 'weight_col' )]
ncol(data)
nrow(data)
nrow(data[complete.cases(data),])
knitr::opts_chunk$set(echo = TRUE)
data <- data[,-which(names(data) == 'weight_col' )]
summary(data)
head(data, 2)
filePath = "C:/Users/micha/Downloads/all_summary.csv"
initial <- read.table(filePath, nrows = 100, sep = ";", header = TRUE)
classes <- sapply(initial, class)
data <- read.table(filePath, colClasses = classes, sep = ";", na.strings = 'nan', nrows = 10000, header = TRUE)
summary(data)
summary(data$res_name)
summary(data$res_name)
unique(data$res_name)
nrow(unique(data$res_name))
length(unique(data$res_name)
)
print(object.size(data), units='Mb')
nrow(data)
data <- filter(data, res_name %in% top50names)
nrow(data)
sort(table(data$res_name), decreasing=TRUE)
nrow(data)
unique(data$res_name)
nrow(unique(data$res_name))
length(unique(data$res_name))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tibble)
library(tidyr) #transforming data
library(ggplot2)
library(kableExtra) #nicer tables
library(data.table) #%like%
set.seed(23)
filePath = "C:/Users/micha/Downloads/all_summary.csv"
initial <- read.table(filePath, nrows = 100, sep = ";", header = TRUE)
classes <- sapply(initial, class)
file_data <- read.table(filePath, colClasses = classes, sep = ";", na.strings = 'nan', nrows = 10000, header = TRUE)
data <- file_data
res_names_to_remove <- c('UNK', 'UNX', 'UNL', 'DUM', 'N', 'BLOB', 'ALA', 'ARG', 'ASN', 'ASP', 'CYS', 'GLN', 'GLU', 'GLY', 'HIS', 'ILE', 'LEU', 'LYS', 'MET', 'MSE', 'PHE', 'PRO', 'SEC', 'SER', 'THR', 'TRP', 'TYR', 'VAL', 'DA', 'DG', 'DT', 'DC', 'DU', 'A', 'G', 'T', 'C', 'U', 'HOH', 'H20', 'WAT')
data <- filter(data, !res_name %in% res_names_to_remove)
column_value_DT <- gather(data, "column_name", "val", 1:ncol(data))
columns_with_nans <- filter(column_value_DT, is.na(column_value_DT$val))[,1]
table(columns_with_nans)
data <- data[,-which(names(data) == 'weight_col' )]
all_rows_count <- nrow(data)
data <- data[complete.cases(data),]
cleaned_rows_count <- nrow(data)
removed_rows_count <- all_rows_count - cleaned_rows_count
print(object.size(data), units='Mb')
top50 <- sort(table(data$res_name), decreasing=TRUE)[1:50]
top50names <- names(top50)
top50names
nrow(data)
data <- filter(data, res_name %in% top50names)
nrow(data)
sort(table(data$res_name), decreasing=TRUE)
top50names
length(unique(data$res_name))
table(data$res_name)
levels(data$res_name)
levels(data$res_name) <- top50names
length(unique(data$res_name))
table(data$res_name)
table(droplevels(data$res_name))
sort(table(droplevels(data$res_name)), decreasing=TRUE)
class(columns_with_nans)
columns_with_nans
table(columns_with_nans)
t(table(columns_with_nans))
zz <- table(columns_with_nans)
zz
chunk2(zz)
split(zz)
?split
class(zz)
dim(zz)
split(zz, 2)
split(zz, 10)
c <- split(zz, 10)
dim(c)
c
dim(c)
c <- split(zz, by = 5)
, hide
nrow(data)
ncol(data)
s <- data[1:10, 1:20]
s
cor(data)
is_numeric_column_list <- unlist(lapply(data, is.numeric))
is_numeric_column_list
ncol(data)
ncol(data[, is_numeric_column_list])
numeric_data <- data[, is_numeric_column_list]
ncol(numeric_data)
data_cor <- cor(numeric_data)
class(data_cor)
dim(data_cor)
corrplot(data, method='color')
library(corrplot)
corrplot(data, method='color')
corrplot(data, method='number')
corrplot(cor_data, method='color')
corrplot(data_cor, method='number')
cache=TRUE
cex.before <- par("cex")
par(cex = 0.7)
corrplot(data_cor, p.mat = cor1[[1]], insig = "blank", method = "color",
addCoef.col="grey",
order = "AOE", tl.cex = 1/par("cex"),
cl.cex = 1/par("cex"), addCoefasPercent = TRUE)
corrplot(data_cor, p.mat = cor1[[1]], insig = "blank", method = "color",
addCoef.col="grey",
order = "AOE", tl.cex = 1/par("cex"),
cl.cex = 1/par("cex"), addCoefasPercent = TRUE)
corrplot(data_cor, p.mat = cor1[[1]], insig = "blank", method = "color",
addCoef.col="grey")
corrplot(data_cor, insig = "blank", method = "color",
addCoef.col="grey",
order = "AOE", tl.cex = 1/par("cex"),
cl.cex = 1/par("cex"), addCoefasPercent = TRUE)
cor_data <- cor(numeric_data, use = "complete.obs") # NA are removed
corrplot(cor_data, insig = "blank", method = "color",
addCoef.col="grey",
order = "AOE", tl.cex = 1/par("cex"),
cl.cex = 1/par("cex"), addCoefasPercent = TRUE)
corrplot(cor_data, insig = "blank", method = "color",
addCoef.col="grey",
order = "AOE")
corrplot(cor_data, insig = "blank", method = "color",
addCoef.col="grey")
corrplot(cor_data, insig = "blank", method = "color",
addCoef.col="grey")
nrow(is_numeric_column_list)
ncol(is_numeric_column_list)
length(is_numeric_column_list)
length(is_numeric_column_list[TRUE])
TRUE
length(is_numeric_column_list[1])
length(is_numeric_column_list[,TRUE])
length(is_numeric_column_list[TRUE])
is_numeric_column_list
dim(data)
length(is_numeric_column_list[TRUE])
is_numeric_column_list
class(is_numeric_column_list)
is_numeric_column_list[T]
length(is_numeric_column_list[T])
which(is_numeric_column_list == TRUE)
ncol(numeric_data)
numeric_data2 <- data[, !is_numeric_column_list]
ncol(numeric_data2)
colnames(numeric_data2)
?cor
is_numeric_column_list <- unlist(lapply(data, is.numeric))
numeric_data <- data[, is_numeric_column_list]
cor_data <- cor(numeric_data, use = "complete.obs") # NA are removed
#pdf(file = "korelacja_miedzy_kolumnami.pdf")
corrplot(cor_data, insig = "blank", method = "color", addCoef.col="grey",
title = "Korelacja między kolumnami")
#dev.off()
is_numeric_column_list <- unlist(lapply(data, is.numeric))
numeric_data <- data[, is_numeric_column_list]
cor_data <- cor(numeric_data, use = "complete.obs") # NA are removed
#pdf(file = "korelacja_miedzy_kolumnami.pdf")
corrplot(cor_data, insig = "blank", method = "color", addCoef.col="grey",
tl.cex = 1, cl.cex = 1, title = "Korelacja między kolumnami")
#dev.off()
is_numeric_column_list <- unlist(lapply(data, is.numeric))
numeric_data <- data[, is_numeric_column_list]
cor_data <- cor(numeric_data, use = "complete.obs") # NA are removed
#pdf(file = "korelacja_miedzy_kolumnami.pdf")
corrplot(cor_data, method = "color", addCoef.col="grey", tl.col="black"
tl.cex = 1, cl.cex = 1, title = "Korelacja między kolumnami")
is_numeric_column_list <- unlist(lapply(data, is.numeric))
numeric_data <- data[, is_numeric_column_list]
cor_data <- cor(numeric_data, use = "complete.obs") # NA are removed
pdf(file = "korelacja_miedzy_kolumnami.pdf")
corrplot(cor_data, method = "color", addCoef.col="grey", tl.col="black",
tl.cex = 1, cl.cex = 1, title = "Korelacja między kolumnami")
dev.off()
is_numeric_column_list <- unlist(lapply(data, is.numeric))
numeric_data <- data[, is_numeric_column_list]
cor_data <- cor(numeric_data, use = "complete.obs") # NA are removed
pdf(file = "korelacja_miedzy_kolumnami.pdf")
corrplot(cor_data, method = "color", addCoef.col="grey", tl.col="black",
tl.cex = 1, cl.cex = 1, title = "Korelacja między kolumnami",
mar = c(0,0,1,0), number.cex = 0.5, number.digits = 2)
dev.off()
is_numeric_column_list <- unlist(lapply(data, is.numeric))
numeric_data <- data[, is_numeric_column_list]
cor_data <- cor(numeric_data, use = "complete.obs") # NA are removed
pdf(file = "korelacja_miedzy_kolumnami.pdf")
corrplot(cor_data, method = "color", addCoef.col="grey", tl.col="black",
tl.cex = 1, cl.cex = 1, title = "Korelacja między kolumnami",
mar = c(0,0,1,0), number.cex = 0.5, number.digits = 2)
dev.off()
is_numeric_column_list <- unlist(lapply(data, is.numeric))
numeric_data <- data[, is_numeric_column_list]
cor_data <- cor(numeric_data, use = "complete.obs") # NA are removed
pdf(file = "korelacja_miedzy_kolumnami.pdf", onefile=FALSE)
corrplot(cor_data, method = "color", addCoef.col="grey", tl.col="black",
tl.cex = 1, cl.cex = 1, title = "Korelacja między kolumnami",
mar = c(0,0,1,0), number.cex = 0.5, number.digits = 2)
dev.off()
is_numeric_column_list <- unlist(lapply(data, is.numeric))
numeric_data <- data[, is_numeric_column_list]
cor_data <- cor(numeric_data, use = "complete.obs") # NA are removed
pdf(file = "korelacja_miedzy_kolumnami.pdf", onefile=FALSE)
corrplot(cor_data, method = "color", addCoef.col="grey", tl.col="black",
tl.cex = 1, cl.cex = 1, title = "Korelacja między kolumnami",
mar = c(0,0,1,0), number.cex = 0.5, number.digits = 2)
dev.off()
pdf(file = "korelacja_miedzy_kolumnami.pdf", onefile=FALSE)
corrplot(cor_data, method = "color", addCoef.col="grey", tl.col="black",
tl.cex = 1, cl.cex = 1, title = "Korelacja między kolumnami",
mar = c(0,0,1,0), number.cex = 0.5, number.digits = 2)
dev.off()
pdf(file = "korelacja_miedzy_kolumnami.pdf")
corrplot(cor_data, method = "color", addCoef.col="grey", tl.col="black",
tl.cex = 1, cl.cex = 1, title = "Korelacja między kolumnami",
mar = c(0,0,1,0), number.cex = 0.5, number.digits = 2)
is_numeric_column_list <- unlist(lapply(data, is.numeric))
numeric_data <- data[, is_numeric_column_list]
cor_data <- cor(numeric_data, use = "complete.obs") # NA are removed
pdf(file = "korelacja_miedzy_kolumnami.pdf", onefile=FALSE)
corrplot(cor_data, method = "color", addCoef.col="grey", tl.col="black",
tl.cex = 1, cl.cex = 1, title = "Korelacja między kolumnami")
dev.off()
is_numeric_column_list <- unlist(lapply(data, is.numeric))
numeric_data <- data[, is_numeric_column_list]
cor_data <- cor(numeric_data, use = "complete.obs") # NA are removed
pdf(file = "korelacja_miedzy_kolumnami.pdf")
corrplot(cor_data, method = "color", addCoef.col="grey", tl.col="black",
tl.cex = 1, cl.cex = 1, title = "Korelacja między kolumnami")
dev.off()
is_numeric_column_list <- unlist(lapply(data, is.numeric))
numeric_data <- data[, is_numeric_column_list]
cor_data <- cor(numeric_data, use = "complete.obs") # NA are removed
plot <- corrplot(cor_data, method = "color", addCoef.col="grey", tl.col="black",
tl.cex = 1, cl.cex = 1, title = "Korelacja między kolumnami")
pdf(file = "korelacja_miedzy_kolumnami.pdf")
plot
dev.off()
plot <- corrplot(cor_data, method = "color", addCoef.col="grey", tl.col="black",
tl.cex = 1, cl.cex = 1, title = "Korelacja między kolumnami")
pdf(file = "korelacja_miedzy_kolumnami.pdf")
plot
